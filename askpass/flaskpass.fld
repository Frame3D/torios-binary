# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
decl {\#include <string>} {public global
} 

decl {\#include <iostream>} {public global
} 

decl {\#include <vector>} {public global
} 

class UI {open
} {
  Function {make_window()} {open
  } {
    Fl_Window passwin {
      label {ToriOS Askpass} open
      xywh {449 195 240 120} type Double visible
    } {
      Fl_Input password {
        label Password
        xywh {25 30 200 35} type Secret box FLAT_BOX align 257
        code0 {o->copy_label(MSG.c_str());}
      }
      Fl_Button {} {
        label Cancel
        callback {std::cout<<std::endl;
exit(1);} selected
        xywh {60 75 80 35} box FLAT_BOX color 80 selection_color 72 labelcolor 7
      }
      Fl_Button ok {
        label Ok
        callback {std::cout<<password->value()<<std::endl;
exit(0);} selected
        xywh {150 75 75 35} box FLAT_BOX color 60 selection_color 72 labelcolor 7
      }
    }
  }
  Function {combine(std::vector<std::string> in)} {open return_type {std::string}
  } {
    code {std::string out;
if(in.empty())
{
  out="Password";
}
else
{
  for( std::vector<std::string>::iterator it = in.begin();
    it!=in.end();
    ++it)
  {
    out+=*it;
    out+=" ";
  }
}
return out;} {}
  }
  decl {std::string MSG;} {public local
  }
} 

Function {main(int argc, char*argv[])} {open return_type int
} {
  code {std::string current_exec_name = argv[0];
std::string first_arge;
std::vector<std::string> all_args;
if (argc > 1)
{
  first_arge = argv[1];
  all_args.assign(argv + 1, argv + argc);
}
UI *ui = new UI();
ui->MSG=ui->combine(all_args);
ui->make_window()->show();
return Fl::run();} {}
} 
