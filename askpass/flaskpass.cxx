// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include <libintl.h>
#include "flaskpass.h"

void UI::cb_Cancel_i(Fl_Button*, void*) {
  std::cout<<std::endl;
exit(1);
}
void UI::cb_Cancel(Fl_Button* o, void* v) {
  ((UI*)(o->parent()->user_data()))->cb_Cancel_i(o,v);
}

void UI::cb_ok_i(Fl_Button*, void*) {
  std::cout<<password->value()<<std::endl;
exit(0);
}
void UI::cb_ok(Fl_Button* o, void* v) {
  ((UI*)(o->parent()->user_data()))->cb_ok_i(o,v);
}

Fl_Double_Window* UI::make_window() {
  { passwin = new Fl_Double_Window(240, 120, gettext("ToriOS Askpass"));
    passwin->user_data((void*)(this));
    { Fl_Input* o = password = new Fl_Input(25, 30, 200, 35, gettext("Password"));
      password->type(5);
      password->box(FL_FLAT_BOX);
      password->align(Fl_Align(257));
      o->copy_label(MSG.c_str());
    } // Fl_Input* password
    { Fl_Button* o = new Fl_Button(60, 75, 80, 35, gettext("Cancel"));
      o->box(FL_FLAT_BOX);
      o->color((Fl_Color)80);
      o->selection_color(FL_DARK_RED);
      o->labelcolor(FL_BACKGROUND2_COLOR);
      o->callback((Fl_Callback*)cb_Cancel);
    } // Fl_Button* o
    { ok = new Fl_Button(150, 75, 75, 35, gettext("Ok"));
      ok->box(FL_FLAT_BOX);
      ok->color(FL_DARK_GREEN);
      ok->selection_color(FL_DARK_RED);
      ok->labelcolor(FL_BACKGROUND2_COLOR);
      ok->callback((Fl_Callback*)cb_ok);
    } // Fl_Button* ok
    passwin->end();
  } // Fl_Double_Window* passwin
  return passwin;
}

std::string UI::combine(std::vector<std::string> in) {
  std::string out;
  if(in.empty())
  {
    out="Password";
  }
  else
  {
    for( std::vector<std::string>::iterator it = in.begin();
      it!=in.end();
      ++it)
    {
      out+=*it;
      out+=" ";
    }
  }
  return out;
}

int main(int argc, char*argv[]) {
  std::string current_exec_name = argv[0];
  std::string first_arge;
  std::vector<std::string> all_args;
  if (argc > 1)
  {
    first_arge = argv[1];
    all_args.assign(argv + 1, argv + argc);
  }
  UI *ui = new UI();
  ui->MSG=ui->combine(all_args);
  ui->make_window()->show();
  return Fl::run();
}
